<?xml version="1.0"?>
<doc>
    <assembly>
        <name>SvgSplit</name>
    </assembly>
    <members>
        <member name="T:SvgSplit.BitmapOperations">
            <summary>
            Contains the main transformations and oder methods needed to perform the tasks.
            </summary>
        </member>
        <member name="M:SvgSplit.BitmapOperations.GetLayersFromPath(System.String,SvgSplit.Range,SvgSplit.Range)">
            <summary>
            Produces a list of strings that contains all Image paths from sourceDirectory according to specified layers and materials
            </summary>
            <param name="sourceDirectory">The source directory of the Images.</param>
            <param name="layers">The layers that were specified for processing.</param>
            <param name="materials">The materials that were specified for processing.</param>
            <returns></returns>
        </member>
        <member name="M:SvgSplit.BitmapOperations.ResizeImage(System.Drawing.Image,System.Int32,System.Int32)">
            <summary>
            Resize the image to the specified width and height.
            </summary>
            <param name="image">The image to resize.</param>
            <param name="width">The width to resize to.</param>
            <param name="height">The height to resize to.</param>
            <returns>The resized image.</returns>
        </member>
        <member name="M:SvgSplit.BitmapOperations.CopyToBpp(System.Drawing.Bitmap,System.Int32)">
            <summary>
            Copies a bitmap into a 1bpp/8bpp bitmap of the same dimensions, fast.
            </summary>
            <param name="b">original bitmap</param>
            <param name="bpp">1 or 8, target bpp</param>
            <returns>a 1bpp copy of the bitmap</returns>
        </member>
        <member name="T:SvgSplit.BitmapOperations.BITMAPINFO">
            <summary>
            Strucure to support bitmap conversion between different pixel depths (bpp).
            </summary>
        </member>
        <member name="M:SvgSplit.BitmapOperations.Offset(System.Drawing.Bitmap,System.Int32,System.Int32)">
            <summary>
            Offsets the specified bitmap in x and y direction. Important: Takes only bitmaps with 8bppIndexed format! Returns a 1bppIndexed bitmap.
            </summary>
            <param name="bitmap">The bitmap.</param>
            <param name="offsetHorizontal">The horizontal offset in pixels. Must be positive i.e. directed from left to right.</param>
            <param name="offsetVertical">The vertical offset in pixels. Must be postive i.e. directed from top to bottom.</param>
            <returns></returns>
        </member>
        <member name="M:SvgSplit.BitmapOperations.Get1bbpQuadrant(System.Drawing.Bitmap,System.Int32)">
            <summary>
            Gets a specified quadrant of the current bitmap object.
            </summary>
            <param name="bitmap">The bitmap.</param>
            <param name="quadrant">The quadrant number.</param>
            <returns></returns>
        </member>
        <member name="M:SvgSplit.BitmapOperations.Convert1bppTo8bpp(System.Drawing.Bitmap)">
            <summary>
            Converts 1bpp bitmap to to 8bpp bitmap. 
            </summary>
            <param name="bitmap">The bitmap. Caution: Only works with bitmaps whose width is a multiple of 8! </param>
            <returns></returns>
        </member>
        <member name="M:SvgSplit.BitmapOperations.Insert8bppImage(System.Drawing.Bitmap,System.Drawing.Bitmap,System.Int32,System.Int32)">
            <summary>
            Inserts "image" into bitmap from source at coordinates dx and dy
            </summary>
            <param name="source">The source.</param>
            <param name="image">The image.</param>
            <param name="dx">x-axis.</param>
            <param name="dy">y-axis.</param>
        </member>
        <member name="M:SvgSplit.BitmapOperations.Convert24bppTo8bpp(System.Drawing.Bitmap)">
            <summary>
            Converts the current 24bpp bitmap object to 8bpp.
            </summary>
            <param name="bitmap">The bitmap.</param>
            <returns></returns>
        </member>
        <member name="M:SvgSplit.BitmapOperations.New8bppGrayscaleBitmap(System.Int32,System.Int32)">
            <summary>
            Creates a 8bpp bitmap whose color palette is greyscale..
            </summary>
            <param name="width">The width.</param>
            <param name="height">The height.</param>
            <returns></returns>
        </member>
        <member name="M:SvgSplit.BitmapOperations.SetPaletteGrayscale(System.Drawing.Bitmap)">
            <summary>
            Sets the palette of a bitmap to grayscale.
            </summary>
            <param name="bitmap">The bitmap.</param>
        </member>
        <member name="M:SvgSplit.BitmapOperations.Add_8bpp(System.Drawing.Bitmap,System.Drawing.Bitmap)">
            <summary>
            Adds bitmap b to bitmap a. Meaning it creates a new bitmap of same size with each pixel assigned the higher one of the two inputs. Takes only 8bpp format.
            </summary>
            <param name="a">bitmap a</param>
            <param name="b">bitmap b</param>
            <returns></returns>
        </member>
        <member name="M:SvgSplit.BitmapOperations.Add(System.Drawing.Bitmap,System.Drawing.Bitmap,System.Drawing.Imaging.PixelFormat)">
            <summary>
            Adds bitmap b to bitmap a. Meaning it creates a new bitmap of same size with each pixel assigned the higher one of the two inputs. Takes any bpp format.
            </summary>
            <param name="a">bitmap a</param>
            <param name="b">bitmap b</param>
            <param name="pixelFormat">The pixel format.</param>
            <returns></returns>
        </member>
        <member name="M:SvgSplit.BitmapOperations.Subtract(System.Drawing.Bitmap,System.Drawing.Bitmap)">
            <summary>
            Subtracts bitmap b from bitmap a. Takes only 8bpp format.
            </summary>
            <param name="a">bitmap a</param>
            <param name="b">bitmap b</param>
            <param name="pixelFormat">The pixel format.</param>
            <returns></returns>
        </member>
        <member name="M:SvgSplit.BitmapOperations.Invert(System.Drawing.Bitmap)">
            <summary>
            Inverts the current instance of bitmap
            </summary>
            <param name="a">The bitmap to be inverted.</param>
        </member>
        <member name="M:SvgSplit.BitmapOperations.Invert2(System.Drawing.Bitmap)">
            <summary>
            Inverts the specified source. Alternative to "Invert", which did not work properly.
            </summary>
            <param name="source">The source.</param>
            <returns></returns>
        </member>
        <member name="M:SvgSplit.BitmapOperations.Overlay(System.Drawing.Bitmap,System.Drawing.Imaging.BitmapData,System.Boolean)">
            <summary>
            Overlays the specified overlay data over the current instance of bitmap.
            </summary>
            <param name="bitmap">The bitmap.</param>
            <param name="overlayData">The overlay data.</param>
            <param name="applyOnBlack">if set to <c>true</c> [apply on black].</param>
        </member>
        <member name="M:SvgSplit.BitmapOperations.Dilate(System.Drawing.Bitmap,System.Int32,System.Int32)">
            <summary>
            All edges are transformed to walls with specified thickness of r pixels. 
            </summary>
            <param name="bitmap">The bitmap.</param>
            <param name="r">The number of rows. Maximum is 254.</param>
            <returns></returns>
        </member>
        <member name="M:SvgSplit.BitmapOperations.DilateMore(System.Drawing.Bitmap,System.Int32,System.Int32)">
            <summary>
            All edges are transformed to walls with specified thickness of r pixels. Can produce distances higher than 255 but might be slower than the above function. 
            </summary>
            <param name="bitmap">The bitmap.</param>
            <param name="r">The number of rows.</param>
            <returns></returns>
        </member>
        <member name="M:SvgSplit.BitmapOperations.CreateGradient(System.Drawing.Bitmap,System.Int32,System.Int32,System.Double)">
            <summary>
            Creates the gradient.
            </summary>
            <param name="bitmap">The bitmap.</param>
            <param name="maxBrightness">The maximum brightness.</param>
            <param name="minBrightness">The minimum brightness.</param>
            <param name="brightnessDropPerPixel">The brightness drop per pixel.</param>
            <returns></returns>
        </member>
        <member name="M:SvgSplit.BitmapOperations.CreateWiderGradient(System.Drawing.Bitmap,System.Int32,System.Int32,System.Double)">
            <summary>
            Creates a gradient. Is able to apply a higher gradient that can be up to 5000 pixels wide.
            </summary>
            <param name="bitmap">The bitmap.</param>
            <param name="maxBrightness">The maximum brightness.</param>
            <param name="minBrightness">The minimum brightness.</param>
            <param name="brightnessDropPerPixel">The brightness drop per pixel.</param>
            <returns></returns>
        </member>
        <member name="T:SvgSplit.DlpLayer">
            <summary>
            This is a class contains the properties of a DLP layer.
            </summary>
        </member>
        <member name="T:SvgSplit.DlpLayerProcessor">
            <summary>
            This class contains a method that proccesses DLP layers.
            </summary>
        </member>
        <member name="M:SvgSplit.DlpLayerProcessor.ProcessLayer(SvgSplit.DlpLayer)">
            <summary>
            Processes the Dlp layer; adds the gradient and saves the file.
            </summary>
            <param name="layer">The layer.</param>
        </member>
        <member name="T:SvgSplit.IniFile">
            <summary>
            Ini File gives some instruction on compiling of the .EXE and is there to specify number of processors / threads to use for multithreading.
            </summary>
        </member>
        <member name="T:SvgSplit.LayerProcessor">
            <summary>
            This class contains methods to process a layer from SVG to tif.
            </summary>
        </member>
        <member name="M:SvgSplit.LayerProcessor.GetLayerAsBitmap(SvgSplit.SvgLayer)">
            <summary>
            Returns SVG input as 1bpp Bitmap.
            </summary>
            <param name="layer">The layer.</param>
            <returns></returns>
        </member>
        <member name="M:SvgSplit.LayerProcessor.GetSvgAndOutputDimensions(SvgSplit.SvgLayer)">
            <summary>
            Gets the SVG and output dimensions.
            </summary>
            <param name="layer">The layer.</param>
            <returns></returns>
        </member>
        <member name="M:SvgSplit.LayerProcessor.UpdateLayerSize(SvgSplit.SvgLayer,System.Drawing.SizeF)">
            <summary>
            Updates the size of the layer.
            </summary>
            <param name="layer">The layer.</param>
            <param name="dims">The dimensions.</param>
        </member>
        <member name="M:SvgSplit.LayerProcessor.UpdateBitmapSize(System.Drawing.Image,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Allow for zeros in width and/or height by adjusting according to dimensions of the original image. 
            If one is zero it is scaled according to other output value and the initial dimensions. 
            If both values are zero it is left in its initial dimensions and size in MM, but still applies the intended dpiValues to get from mm to pixels.
            </summary>
            <param name="layer">The layer.</param>
            <param name="dims">The dimensions.</param>
        </member>
        <member name="M:SvgSplit.LayerProcessor.ProcessLayer(SvgSplit.SvgLayer)">
            <summary>
            Processes the layer and saves it.
            </summary>
            <param name="layer">The layer.</param>
        </member>
        <member name="M:SvgSplit.LayerProcessor.GenerateStreamFromString(System.String)">
            <summary>
            A Stream is a representation of bytes. 
            A MemoryStream reads and writes to the memory. So it relates to where the stream is stored.
            This class generates a stream from a string.
            </summary>
            <param name="s">The s.</param>
            <returns></returns>
        </member>
        <member name="M:SvgSplit.LayerProcessor.Convert(System.Drawing.Bitmap,System.Drawing.Bitmap)">
            <summary>
            Converts the specified source.
            </summary>
            <param name="src">The source.</param>
            <param name="conv">The .</param>
        </member>
        <member name="T:SvgSplit.LinqExtensions">
            <summary>
            Language-Integrated Query (LINQ) is the name for a set of technologies based on the integration of query capabilities directly into the C# language.
            This class expands on one of its functions by overloading its IEnumerable interface.
            </summary>
        </member>
        <member name="M:SvgSplit.LinqExtensions.Split``1(System.Collections.Generic.IEnumerable{``0},System.Int32)">
            <summary>
            Splits all layers into a list of separate lists. Each "sublist" contains a different portion of all layers with the size according to the process count.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="list">The list.</param>
            <param name="parts">The parts.</param>
            <returns></returns>
        </member>
        <member name="T:SvgSplit.OverlayLayer">
            <summary>
            This is a class contains the properties of an Overlay layer.
            </summary>
        </member>
        <member name="T:SvgSplit.OverlayProcessor">
            <summary>
            This class contains methods to process a raw .tif layer to an overlay layer by applying the source overlay.
            </summary>
        </member>
        <member name="M:SvgSplit.OverlayProcessor.ProcessLayer(SvgSplit.OverlayLayer)">
            <summary>
            Processes the overlay layer.
            </summary>
            <param name="layer">The layer.</param>
        </member>
        <member name="T:SvgSplit.Program">
            <summary>
            Contains the main methods that perform the different tasks.
            </summary>
        </member>
        <member name="M:SvgSplit.Program.ProcessSvg(System.String,System.String,System.Int32,System.Int32,System.Int32,System.Int32,System.String,System.Int32,System.Int32)">
            <summary>
            Processes the SVG.
            </summary>
            <param name="inputSvg">The input SVG.</param>
            <param name="outputPath">The output path.</param>
            <param name="outputWidth">Width of the output.</param>
            <param name="outputHeight">Height of the output.</param>
            <param name="layerRange">The layer range.</param>
            <returns></returns>
        </member>
        <member name="M:SvgSplit.Program.MakeLayersDlp(System.String,System.String,System.Int32,System.Int32,System.Double,System.String,System.String)">
            <summary>
            Makes the DLP layers. These layers have an inward gradient at the edges for less stress build up from the photocuring process.
            </summary>
            <param name="inputPath">The input path.</param>
            <param name="outputPath">The output path.</param>
            <param name="maxBrightness">The maximum brightness.</param>
            <param name="minBrightness">The minimum brightness.</param>
            <param name="brightnessDropPerPixel">The brightness drop per pixel for the gradient.</param>
            <param name="layerRange">The layer range.</param>
            <returns></returns>
        </member>
        <member name="M:SvgSplit.Program.CreateLayerOverlay(System.String,System.String,System.String,System.Boolean,System.Boolean,System.String,System.String)">
            <summary>
            Creates the layer overlay.
            </summary>
            <param name="sourceDirectory">The source directory.</param>
            <param name="outputDirectory">The output directory.</param>
            <param name="overlaySource">The overlay source. Must be 8bpp format!</param>
            <param name="invert">if set to <c>true</c> [invert].</param>
            <param name="applyOnBlack">if set to <c>true</c> [apply on black].</param>
            <param name="layerDefinition">Layers to be generated. Can be range and/or numbers separated by comma (i.e. 2-3, 5, 7-8). "all" or "" will process all layers.</param>
            <returns></returns>
        </member>
        <member name="M:SvgSplit.Program.ProcessTask(System.Collections.Generic.IEnumerable{SvgSplit.SvgLayer})">
            <summary>
            Creates a instance of Layer Processor for each layer in a task and applies ProcessLayer method to the respective layer. This saves the layers as Bitmap.
            </summary>
            <param name="task">The task.</param>
        </member>
        <member name="M:SvgSplit.Program.ProcessTask(System.Collections.Generic.IEnumerable{SvgSplit.DlpLayer})">
            <summary>
            Processes a list of DlpLayers; adds the gradient and saves the files.
            </summary>
            <param name="task">The task.</param>
        </member>
        <member name="M:SvgSplit.Program.ProcessTask(System.Collections.Generic.IEnumerable{SvgSplit.OverlayLayer})">
            <summary>
            Processes the list of overlay layers.
            </summary>
            <param name="task">The task.</param>
        </member>
        <member name="M:SvgSplit.Program.GetMaterialIDs(System.String)">
            <summary>
            Gets the material IDs form the input SVG file.
            </summary>
            <param name="filename">The filename.</param>
            <param name="range">The range.</param>
            <returns></returns>
        </member>
        <member name="M:SvgSplit.Program.GetSvgLayers(System.String,SvgSplit.Range,System.Int32)">
            <summary>
            Creates the SVG layers as objects of the class SVGLayer.
            </summary>
            <param name="filename">The filename.</param>
            <param name="range">Defines which layers will be processed.</param>
            <param name="materialID">The material identifier. If set to -1 there will be no distinction between colours i.e. materials. Otherwise a stack of layers containing only the specified material number is returned.</param>
            <returns></returns>
        </member>
        <member name="M:SvgSplit.Program.GetLinesWithMaterial(System.String[],System.Int32,System.Int32,System.Int32)">
            <summary>
            Gets the lines with material.
            </summary>
            <param name="lines">The lines.</param>
            <param name="from">From.</param>
            <param name="to">To.</param>
            <param name="text">The text.</param>
            <returns></returns>
        </member>
        <member name="M:SvgSplit.Program.CreateSupportLayers(System.String,System.String,System.Double)">
            <summary>
            Creates the support layers. Takes only layers with all materials merges, i.e. "layer_xxxxxxxxx_.tif"
            </summary>
            <param name="sourceDirectory">Source directory of the layers. Only TIFF images will be processed.</param>
            <param name="outputDirectory">Output directory where Support layers will be generated. WARNING: if the directory is not empty, all files will be deleted!</param>
            <param name="wallThickness">The wall thickness in pixels.</param>
            <returns></returns>
        </member>
        <member name="M:SvgSplit.Program.GetBitmapFromFile(System.String,System.String,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Returns a bitmap from a file. Resized to specified dimensions. Souce file can be SVG, BMP, PNG, TIF or TIFF. Returns bitmap with crossed out circle if filetype is not supported.
            </summary>
            <param name="imagePath">The image path.</param>
            <param name="layerNumber">The layer number. Only applies for stacked SVGs. Cannot be negative or higher than there are layers in the svg.</param>
            <param name="dpiHorizontal">The dpi horizontal.</param>
            <param name="dpiVertical">The dpi vertical.</param>
            <param name="outputWidthPx">The output width px.</param>
            <param name="outputHeightPx">The output height px.</param>
            <returns></returns>
        </member>
        <member name="T:SvgSplit.Range">
            <summary>
            The range of the layers to be printed. Is specified by [4,6,12-14] and saved as list e.g. [4,6,12,13,14].
            </summary>
            <seealso cref="!:System.Collections.Generic.List&lt;System.Int32&gt;" />
        </member>
        <member name="T:SvgSplit.SupportCalculator">
            <summary>
            This class handles different tasks to create and transform layers.
            </summary>
        </member>
        <member name="M:SvgSplit.SupportCalculator.CreateSupportLayers">
            <summary>
            Creates the support layers.
            </summary>
        </member>
        <member name="M:SvgSplit.SupportCalculator.JoinLayers(System.String,System.String)">
            <summary>
            Joins the layers.
            </summary>
            <param name="sourceDirectory">The source directory.</param>
            <param name="outputDirectory">The output directory.</param>
        </member>
        <member name="T:SvgSplit.SvgLayer">
            <summary>
            This is a class contains the properties of an Overlay layer.
            </summary>
        </member>
    </members>
</doc>
